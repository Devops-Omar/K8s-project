                             ######################
        #####################  AWS Configuration   #####################
                             ######################
1- Create User with permissions (EBS, EFS):
 - create user with permissions ("AmazonEBSCSIDriverPolicy", "AmazonElasticFileSystemFullAccess")

2- create access key for user:
 - Generate an access key and secret access key for the IAM user created above.

3- create role and Add permissions (EBS, EFS):
 - Create an IAM role with the following policy attached

##############################################
 File: AWS-EFS-policy-json
############################################## 

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "elasticfilesystem:DescribeAccessPoints",
                "elasticfilesystem:DescribeFileSystems",
                "elasticfilesystem:DescribeMountTargets",
                "ec2:DescribeAvailabilityZones"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticfilesystem:CreateAccessPoint"
            ],
            "Resource": "*",
            "Condition": {
                "StringLike": {
                    "aws:RequestTag/efs.csi.aws.com/cluster": "true"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticfilesystem:TagResource"
            ],
            "Resource": "*",
            "Condition": {
                "StringLike": {
                    "aws:ResourceTag/efs.csi.aws.com/cluster": "true"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": "elasticfilesystem:DeleteAccessPoint",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:ResourceTag/efs.csi.aws.com/cluster": "true"
                }
            }
        }
    ]
}

ubuntu@master:~$ kubectl get csidriver:
NAME              ATTACHREQUIRED   PODINFOONMOUNT   STORAGECAPACITY   TOKENREQUESTS   REQUIRESREPUBLISH   MODES        AGE
ebs.csi.aws.com   true             false            false             <unset>         false               Persistent   34d
efs.csi.aws.com   false            false            false             <unset>         false               Persistent   27h


ubuntu@master:~$ kubectl get csinode:
NAME     DRIVERS   AGE
master   2         69d
node1    2         69d
node2    2         69d


ubuntu@master:~$ kubectl create secret generic dolfined-project: \
     --namespace kube-system \
     --from-literal "key_id=AK************" \
     --from-literal "access_key=ie**********"
secret/dolfined-project created


